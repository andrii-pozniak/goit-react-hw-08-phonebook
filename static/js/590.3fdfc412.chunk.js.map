{"version":3,"file":"static/js/590.3fdfc412.chunk.js","mappings":"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","sources":["Redux/contacts/selector.jsx","components/ContactList/ContactList.jsx","components/Form/Form.jsx","components/Filter/Filter.jsx","pages/Contacts.jsx","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["export const selectContacts = state => state.contacts.contacts;\nexport const selectLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\n\nexport const selectFilter = state => state.filters;;","import React from 'react';\nimport { useDispatch,useSelector } from \"react-redux\";\nimport { selectFilter, selectContacts } from \"Redux/contacts/selector\";\nimport { deleteContacts } from \"Redux/contacts/operations\";\nimport { Button, List, Stack, Box, Text, Grid, GridItem, Container } from '@chakra-ui/react';\n\n// import PropTypes from 'prop-types';\n// import { StyleItem, StyleButton, StylePage } from \"./ContactList.style\";\n\nexport const ContactList = () => {\n   const contacts = useSelector(selectContacts);\n   const filterName = useSelector(selectFilter)\n   console.log(contacts)\n  \n   const dispatch = useDispatch();\n   \n   const getVisibleContact = () => {\n      console.log(filterName)\n      return  contacts.filter(contact => \n        contact.name.toLowerCase().includes(filterName.filters));\n        \n     };\n     const visibleContact = getVisibleContact();\n     console.log(visibleContact)\n    return <ul> \n      {visibleContact.map(({ name, number, id}) => (\n         <Box w={'90%'} py='4'>\n            <Container>\n            <Stack spacing={1}>               \n               <List key={id}>\n                  <Grid w={'80%'} templateColumns='repeat(4, 0.3fr)' gap={1} alignItems={\"center\"} >\n                     <GridItem colSpan={2}  borderRadius=\"md\" bg={'blue.100'} p={'2'} justifyContent={'center'}>\n                        <Text >{name}</Text>\n                     </GridItem >\n                     <GridItem colSpan={1}  borderRadius=\"md\" bg={'blue.100'}p={'2'} justifyContent={'center'}>\n                        <Text > {number}</Text>\n                     </GridItem>                  \n                     <GridItem colSpan={1} >\n                        <Button bg='blue.200' _hover={{shadow: 'md'}} type='button' onClick = { \n                        () => dispatch(deleteContacts(id))}>delete</Button>\n\n                     </GridItem>\n                  </Grid>                \n               </List>           \n            </Stack>\n            </Container>\n            \n         </Box>\n         \n      )) \n       }\n    </ul>\n};\n\n// ContactList.propTypes = {\n//    contacts: PropTypes.array.isRequired,\n    \n// }","import {useState} from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectContacts } from \"Redux/contacts/selector\";\nimport {  nanoid } from \"@reduxjs/toolkit\";\nimport { addContact } from \"Redux/contacts/operations\";\nimport { Button, Input, Text, Heading, Stack, Box, Container } from '@chakra-ui/react';\n\n// import { StyleForm, StyleLabel, StyleButton, StyleInput} from \"./Form.Styled\";\n\nexport  const Form =()=> {\n    const dispatch = useDispatch();\n    const [name, setName] = useState();\n    const [number, setNumber] = useState();\n    const phoneContacts = useSelector(selectContacts);\n\n    const handleChange = evt => {\n        const {name, value} = evt.target\n        console.log(phoneContacts)\n      \n        switch(name) {\n            case `name`:\n                setName(value)  \n                break;\n            case `number`:\n                setNumber(value)  \n                break;   \n                default:\n                return;\n        }\n    }\n        const handleSubmit = event => {\n            event.preventDefault();\n           \n            console.log({name, number})\n            dispatch(addContact( { id: nanoid(2), name, number } ));\n           reset();\n          };\n          const reset = () => {\n            setName('')\n            setNumber('')\n            \n            }\n    return (\n        <>\n        \n        <Box w={'90%'} py='5' >\n            <Container>\n            <Heading as='h1' size='l' noOfLines={1}>Phonebook</Heading>\n            <Stack spacing={2}>\n            <form onSubmit={handleSubmit}>\n             \n             <Text htmlFor=''> Name </Text>\n                 <Input width=\"50%\"\n                 type=\"text\"\n                 name=\"name\"\n                 pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                 title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                 required\n                 \n                 value={name} \n                 onChange={handleChange}\n                 />\n             <Text htmlFor=''> Number </Text>\n                 <Input width=\"50%\"\n                 name=\"number\"\n                 pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                 title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                 required\n                 \n                 value={number} \n                 onChange={handleChange}\n                    />\n             <Button display=\"flex\" mt={'4'} bg='blue.100' type='submit'>Add contact</Button>\n         </form>\n            </Stack>\n            <Heading mt={'4'} as='h2' size='l' noOfLines={1}>Contacts</Heading>        \n\n            </Container>\n            \n        </Box>\n         \n        </>\n                    \n     )\n    \n} ","import PropTypes from 'prop-types';\nimport { useDispatch } from \"react-redux\";\nimport { setFilter } from \"Redux/contacts/filterSlice\";\nimport { Text, Input, Stack, Box, Container } from '@chakra-ui/react';\n\n\n// import { StyleLabel, StyleInput} from \"./Filter.Style\"\n\n\nexport const Filter = ({value}) => {\n  const dispatch = useDispatch();\n  \n  const changeFilter = evt => {\n    const filters = evt.currentTarget.value\n    \n    console.log(filters)\n  dispatch(setFilter(filters))\n  };\n  \n  return    <>\n  <Box w={'90%'} py='3'>\n    <Container>\n    <Stack spacing={2}>\n    <Text>Find contact by name</Text>\n    <Input w={'50%'} type='text' value={value} onChange={changeFilter}/>\n    </Stack>\n    </Container>\n   \n  </Box>\n     \n    </>\n  \n};\n\nFilter.prototypes = {\n  value: PropTypes.string.isRequired, \n  onChange: PropTypes.node.isRequired,\n}\n    \n   \n","import { ContactList } from 'components/ContactList/ContactList';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'Redux/contacts/operations';\nimport { selectLoading } from 'Redux/contacts/selector';\nimport { Form  } from \"components/Form/Form\";\nimport { Filter } from 'components/Filter/Filter';\n\nexport default function Contacts() {\n    const dispatch = useDispatch();\n    const isLoading = useSelector(selectLoading);\n  \n    useEffect(() => {\n      dispatch(fetchContacts());\n    }, [dispatch]);\n  \n    return (\n      <>\n       \n          <title>Your tasks</title>\n        <Form/>  \n        <Filter/>     \n        <div>{isLoading && 'Request in progress...'}</div>\n        <ContactList/>\n        \n      </>\n    );\n  }\n  ","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["selectContacts","state","contacts","selectLoading","isLoading","selectFilter","filters","ContactList","useSelector","filterName","console","log","dispatch","useDispatch","visibleContact","filter","contact","name","toLowerCase","includes","map","number","id","w","py","spacing","templateColumns","gap","alignItems","colSpan","borderRadius","bg","p","justifyContent","_hover","shadow","type","onClick","deleteContacts","Form","useState","setName","setNumber","phoneContacts","handleChange","evt","target","value","reset","as","size","noOfLines","onSubmit","event","preventDefault","addContact","nanoid","htmlFor","width","pattern","title","required","onChange","display","mt","Filter","currentTarget","setFilter","Contacts","useEffect","fetchContacts","prototypes","PropTypes","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","location","propFullName","secret","err","Error","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes"],"sourceRoot":""}